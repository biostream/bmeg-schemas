syntax = "proto3";

// Protocol Buffers description of API for Observation-Deck.
// chrisw
// 21APR16

package bmeg.gaea.schema;

message HeavilyWeightedGenesSignaturesQuery {
	repeated string geneList = 1;
}

message HeavilyWeightedGenesSignaturesResponse {
	repeated responseItem responseItems = 1;

	message responseItem {
		EventData.EventMetadata signatureMetadata = 1;

		// composite score for query gene set
		float score = 2;
	}
}

// This is a ObservationDeckQuery where there is no sampleList.
message SampleDataForSamplesWithExtremeScoresQuery {

	// return the top 50 and bottom 50 scoring samples for these signatureEvents
	repeated EventData.EventMetadata signatureMetadata = 1;

	// return the expression values for the samples returned in signatureMetadata
	repeated EventData.EventMetadata expressionMetadata = 2;

	// return the clinical event data for the samples returned in signatureMetadata
	repeated EventData.EventMetadata clinicalEventMetadata = 3;
}

// This is the same as ObservationDeckResponse.
message SampleDataForSamplesWithExtremeScoresResponse {
	repeated EventData eventData = 1;
}

// request some event data for a list of samples
message ObservationDeckQuery {
	// identify the sample set to report
	repeated string sampleList = 1;
	// identify which events to report
	repeated EventData.EventMetadata eventList = 2;
}

// respond with some event data
message ObservationDeckResponse {
	// return event data for the requested sample set
	repeated EventData eventData = 1;
}

// events have metadata and data
message EventData {
	EventMetadata metadata = 1;
	repeated SampleData sampleData = 2;

	// information about an event
	message EventMetadata {
		string eventID = 1;

		// eventType could be something like mrna_expression, mutation_type, copy_number, clinical, etc.
		string eventType = 2;

		Datatype datatype = 3;
		
		// Is SampleData.val to be interpreted as a string, number, or category?
		enum Datatype {
			STRING = 0;
			NUMERIC = 1;
			CATEGORIC = 2;
		}

		// featureWeights applies to events that are signatures
		repeated FeatureWeight featureWeights = 4;

		message FeatureWeight {
			string feature = 1;
			float weight = 2;
		}
	}

	// sample data
	message SampleData {
		string sampleId = 1;
		string value = 2;
	}
}
