syntax = "proto3";

package bmeg;

import "ga4gh/genotype_phenotype.proto";

/*
Data Messages related to phenotype associatation
Some of the relavant messages are part of the GA4GH Genotype To Phenotype schema
https://github.com/ga4gh/ga4gh-schemas/blob/master/src/main/proto/ga4gh/genotype_phenotype.proto
*/

message Predictor {
  string id = 1;

  // OPTIONAL
  // Specify what the model predicts. This should be an ontology node ID
  ga4gh.PhenotypeInstance phenotype = 3;

  // OPTIONAL
  // Specify what the model predicts. This should be an genotype event
  string genotype = 4;

  // environmental factors, match to ontology terms
  repeated ga4gh.EnvironmentalContext environmental_contexts = 5;

  //ID of the model that made the prediction
  string model_id = 6;
  
  string description = 7;

  //Background score data, used to evaluate significance of associations
  //BioSampleID maps to score
  map<string, double> background = 8;
}

message PredictorAssociation {
  //ID of predictor
  string predictor_id = 1;
  //ID of BioSample
  string sample_id = 2;
  //Confidence Value
  double value = 3;
}

/*
Gene Ontology
*/
message GeneOntologyTerm {
  string id = 1;
  string namespace = 2;
  string def = 3;
  string comment = 4;
  string synonym = 5;
  repeated string is_a = 6;
  repeated string alt_id = 7;
  repeated string subset = 8;
  repeated string xref = 9;
  bool is_obsolete = 10;
  repeated string consider = 11;
}


/*
Drug Response data from experiments
*/

message Compound {
  string id = 1;
  string gid = 2;
  string type = 3;

  string name = 4;
  string smiles = 9;
  string target = 5;
  string report = 6;
  string status = 7;
  string rationale = 8;

  // Each synonym may end up as a node.
  repeated string synonyms = 10;
  map<string, string> info = 11;
}

message DoseResponse {
  double dose = 1;
  double response = 2;
}

message ResponseSummary {
  enum SummaryType {
    UNKNOWN = 0;
    EC50 = 1;
    IC50 = 2;
    LD50 = 3;
    GR50 = 4;
    AMAX = 5;
    AUC = 6;
    ACTIVITY_AREA = 7;
    RMSE = 8;
  }

  SummaryType type = 1;
  double value = 2;
  string unit = 3;
}

message ResponseCurve {
  enum ResponseType {
    UNKNOWN = 0;
    GROWTH = 1;
    ACTIVITY = 2;
  }

  string gid = 1;
  ResponseType responseType = 2;
  repeated DoseResponse values = 3;
  double growthStandard = 4;
  string compound = 5;
  string sample = 6;
  repeated ResponseSummary summary = 7;
  repeated double controls = 8;
  repeated double blanks = 9;
}
